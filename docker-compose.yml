version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: imdb_scraper
      POSTGRES_USER: scraper_user
      POSTGRES_PASSWORD: scraper_pass
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - imdb_network

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - imdb_network

  # MinIO for file storage
  minio:
    image: minio/minio:latest
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - imdb_network

  # Backend API
  backend:
    build: ./backend
    environment:
      DATABASE_URL: postgresql+asyncpg://scraper_user:scraper_pass@postgres:5432/imdb_scraper
      REDIS_URL: redis://redis:6379/0
      MINIO_ENDPOINT: minio:9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin123
    depends_on:
      - postgres
      - redis
      - minio
    ports:
      - "8000:8000"
    volumes:
      - ./data:/app/data
    networks:
      - imdb_network

  # Celery Worker
  celery_worker:
    build: ./backend
    command: celery -A app.workers.celery_app worker --loglevel=info
    environment:
      DATABASE_URL: postgresql+asyncpg://scraper_user:scraper_pass@postgres:5432/imdb_scraper
      REDIS_URL: redis://redis:6379/0
    depends_on:
      - postgres
      - redis
    volumes:
      - ./data:/app/data
    networks:
      - imdb_network

  # Frontend
  frontend:
    build: ./frontend
    environment:
      BACKEND_URL: http://backend:8000
    depends_on:
      - backend
    ports:
      - "8501:8501"
    networks:
      - imdb_network

volumes:
  postgres_data:
  redis_data:
  minio_data:

networks:
  imdb_network:
    driver: bridge
